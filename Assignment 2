import cv2
import numpy as np
import os

if not os.path.exists('AvgFilter_ImgSeq'):
    os.makedirs('AvgFilter_ImgSeq')
if not os.path.exists('PixelTransform_ImgSeq'):
    os.makedirs('PixelTransform_ImgSeq')

cap = cv2.VideoCapture('noisyvideo2.mp4')

frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
fps = cap.get(cv2.CAP_PROP_FPS)

kernel = np.ones((3, 3), np.float32) / 9

frame_count = 0

while True:
    ret, frame = cap.read()

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    filtered = cv2.filter2D(gray, -1, kernel)

    frame_count += 1

    if frame_count <= 10:
        cv2.imwrite(f'AvgFilter_ImgSeq/filtered_frame_{frame_count}.jpg', filtered)
        transformed = np.zeros_like(filtered)
        
        for i in range(filtered.shape[0]):
            for j in range(filtered.shape[1]):
                if filtered[i, j] <= 100:
                    transformed[i, j] = (205 * filtered[i, j] + 5000) // 100
                else:
                    transformed[i, j] = 255
        
        cv2.imwrite(f'PixelTransform_ImgSeq/transformed_frame_{frame_count}.jpg', transformed)

    cv2.imshow('Filtered Frame', filtered)


    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

    if frame_count >= 10:
        break

cap.release()
cv2.destroyAllWindows()
